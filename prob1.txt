1. Account(Acc_no, branch_name,balance) branch(branch_name,branch_city,assets)
customer(cust_name,cust_street,cust_city) Depositor(cust_name,acc_no)
Loan(loan_no,branch_name,amount)
Borrower(cust_name,loan_no)
Solve following query:
Create above tables with appropriate constraints like primary key, foreign key, check constrains, not
null etc
Q1. Find the names of all branches in loan relation.
Q2. Find all loan numbers for loans made at Akurdi Branch with loan amount > 12000.
Q3. Find all customers who have a loan from bank. Find their names, loan_no and loan amount. Q4.
List all customers in
alphabetical order who have loan from Akurdi branch.
Q5. Find all customers who have an account or loan or both at bank.
 Q6. Find all customers who have both account and loan at bank.
Solution:
CREATE TABLE Account (
 Acc_no INT PRIMARY KEY,
 branch_name VARCHAR(255) NOT NULL,
 balance DECIMAL(10, 2) NOT NULL);
create the branch table
CREATE TABLE branch (
 branch_name VARCHAR(255) PRIMARY KEY,
 branch_city VARCHAR(255) NOT NULL,
 assets DECIMAL(15, 2) NOT NULL
);
-- Create the customer table
CREATE TABLE customer (
 cust_name VARCHAR(255) PRIMARY KEY,
 cust_street VARCHAR(255) NOT NULL,
 cust_city VARCHAR(255) NOT NULL
);
-- Create the Depositor table
CREATE TABLE Depositor (
 cust_name VARCHAR(255) NOT NULL,
 acc_no INT NOT NULL,
 PRIMARY KEY (cust_name, acc_no),
 FOREIGN KEY (cust_name) REFERENCES customer(cust_name),
 FOREIGN KEY (acc_no) REFERENCES Account(Acc_no)
);
-- Create the Loan table
CREATE TABLE Loan (
 loan_no INT PRIMARY KEY,
 branch_name VARCHAR(255) NOT NULL,
 amount DECIMAL(10, 2) NOT NULL,
 FOREIGN KEY (branch_name) REFERENCES branch(branch_name)
);
-- Create the Borrower table
CREATE TABLE Borrower (
 cust_name VARCHAR(255) NOT NULL,
 loan_no INT NOT NULL,
 PRIMARY KEY (cust_name, loan_no),
 FOREIGN KEY (cust_name) REFERENCES customer(cust_name),
 FOREIGN KEY (loan_no) REFERENCES Loan(loan_no)
);

Q 1 Find the names of all branches in the loan relation.
SELECT DISTINCT branch_name
FROM Loan;
Q2 Find all loan numbers for loans made at Akurdi Branch with a loan
amount greater than 12,000.
SELECT loan_no
FROM Loan
WHERE branch_name = 'Akurdi' AND amount > 12000;
Q3 Find all customers who have a loan from the bank. Find their names,
loan_no, and loan amount.
SELECT C.cust_name, L.loan_no, L.amount
FROM customer C
INNER JOIN Borrower B ON C.cust_name = B.cust_name
INNER JOIN Loan L ON B.loan_no = L.loan_no;
Q 4 List all customers in alphabetical order who have a loan from the Akurdi branch.
SELECT DISTINCT C.cust_name
FROM customer C
INNER JOIN Borrower B ON C.cust_name = B.cust_name
INNER JOIN Loan L ON B.loan_no = L.loan_no
WHERE L.branch_name = 'Akurdi'
ORDER BY C.cust_name;
Q5 Find all customers who have an account or loan or both at the bank.
SELECT DISTINCT C.cust_name
FROM customer C
LEFT JOIN Depositor D ON C.cust_name = D.cust_name
LEFT JOIN Borrower B ON C.cust_name = B.cust_name
WHERE D.cust_name IS NOT NULL OR B.cust_name IS NOT NULL;
Q 6 Find all customers who have both an account and a loan at the bank.
SELECT C.cust_name
FROM customer C
INNER JOIN Depositor D ON C.cust_name = D.cust_name
INNER JOIN Borrower B ON C.cust_name = B.cust_name;